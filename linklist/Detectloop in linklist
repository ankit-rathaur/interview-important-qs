 bool detectLoop(Node* head)
    {
        // your code here
        if(!head)
        return false;
        unordered_map<Node *,int>m;
        while(head)
        {
            if(!m[head])
            {
                m[head]=1;
                head=head->next;
            }
            else return true;
        }
        return false;
        
    }
    //// time and space complexity is 0(n) using hash map
    
    
    
    ********************************************************8888
    another method fast and low  using two pointers
     time 0(n)
     space is 0(1)
     
     ******************
       bool detectLoop(Node* head)
    {
        // your code here
        if(!head)
        return false;
        Node * low=head;
        Node * high=head;
        
        
        while(high!=NULL and high->next!=NULL)
        {
            low=low->next;
            high=high->next->next;
            if(low==high)
            {
                return true;
            }
        }
        return false;
        
    }
    
